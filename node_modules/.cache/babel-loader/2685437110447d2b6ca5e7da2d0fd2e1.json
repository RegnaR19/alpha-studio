{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\nwjs-v0.65.0\\\\react-app\\\\src\\\\components\\\\Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Example() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      ref: target,\n      onClick: () => setShow(!show),\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current,\n      show: show,\n      placement: \"right\",\n      children: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n        id: \"overlay-example\",\n        ...props,\n        children: \"My Tooltip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Example, \"yDjrBmTqsCuzqqYe0FCtEA+YC6w=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","useRef","Button","Overlay","Tooltip","Example","show","setShow","target","current","props"],"sources":["C:/Users/MSI/Desktop/nwjs-v0.65.0/react-app/src/components/Tooltip.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Button ref={target} onClick={() => setShow(!show)}>\r\n        Click me!\r\n      </Button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {(props) => (\r\n          <Tooltip id=\"overlay-example\" {...props}>\r\n            My Tooltip\r\n          </Tooltip>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Example"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAMQ,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,GAAG,EAAEO,MAAb;MAAqB,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,OAAD;MAAS,MAAM,EAAEE,MAAM,CAACC,OAAxB;MAAiC,IAAI,EAAEH,IAAvC;MAA6C,SAAS,EAAC,OAAvD;MAAA,UACII,KAAD,iBACC,QAAC,OAAD;QAAS,EAAE,EAAC,iBAAZ;QAAA,GAAkCA,KAAlC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAcD;;GAlBQL,O;;KAAAA,O;AAoBT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}